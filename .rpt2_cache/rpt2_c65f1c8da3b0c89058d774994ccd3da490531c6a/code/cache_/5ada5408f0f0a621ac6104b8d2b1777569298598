{"code":"/** @format */\r\nimport Debug from \"debug\";\r\nimport * as minimist from \"minimist\";\r\nimport * as fs from \"fs-extra\";\r\nimport * as Hapi from \"hapi\";\r\nimport * as marked from \"marked\";\r\nimport * as MarkedTerminalRenderer from \"marked-terminal\";\r\nimport * as path from \"path\";\r\nimport * as crypto from \"crypto\";\r\nimport * as boom from \"boom\";\r\nimport * as shell from \"shelljs\";\r\nfunction logger(module) {\r\n    return Debug(\"hook:\" + module);\r\n}\r\n/** Shorthand for outputting important messages to the user. */\r\nfunction say(message) {\r\n    console.error(message);\r\n}\r\nclass ConfigError extends Error {\r\n}\r\nconst token_FILE_NAME = \".hook.token\";\r\n(async function () {\r\n    const log = logger(\"setup\");\r\n    if (!shell.which(\"git\")) {\r\n        throw new ConfigError(\"Please install `git` onto your system.\");\r\n    }\r\n    // Parse the arguments\r\n    log(\"parsing arguments...\");\r\n    const args = minimist(process.argv.slice(2));\r\n    if (args.help || args.h) {\r\n        log(\"setting up renderer to display help...\");\r\n        marked.setOptions({\r\n            renderer: new MarkedTerminalRenderer(),\r\n        });\r\n        log(\"rendering and printing help...\");\r\n        say(marked((await fs.readFile(path.resolve(__dirname + \"/../readme.md\"))).toString()));\r\n        process.exit(0);\r\n    }\r\n    let serverArg = args._[0];\r\n    let directoryArg = args._[1];\r\n    if (!serverArg) {\r\n        throw new ConfigError(\"Missing server argument. See documentation.\");\r\n    }\r\n    if (!directoryArg) {\r\n        throw new ConfigError(\"Missing directory argument. See documentation.\");\r\n    }\r\n    log(\"serverArg:\", serverArg);\r\n    log(\"directory:\", directoryArg);\r\n    // remove leading port number \":\" character from server string\r\n    serverArg = serverArg.replace(\":\", \"\");\r\n    const s = serverArg.split(\"/\");\r\n    const port = s[0];\r\n    const route = s[1] || \"/\";\r\n    // Load the directory and ensure it is a valid git repo\r\n    log(\"trying to read git directory\");\r\n    directoryArg = path.resolve(directoryArg); // get long path\r\n    const exists = await fs.pathExists(directoryArg + \"/.git\");\r\n    if (!exists) {\r\n        throw new ConfigError(\"Directory does not appear to be a valid git repository.\");\r\n    }\r\n    log(\"directory seems like a valid repo, cool\");\r\n    // configure the gitlab header\r\n    let token = \"\";\r\n    if (!args.gitlab) {\r\n        throw new ConfigError(\"--gitlab wasn't passed. Only Gitlab hooks are supported at this time.\");\r\n    }\r\n    if (args.gitlab === true) {\r\n        const log = logger(\"setup/token\");\r\n        // try to read the token\r\n        const tokenPath = path.join(directoryArg, token_FILE_NAME);\r\n        try {\r\n            log(\"loading existing token from:\", tokenPath);\r\n            token = (await fs.readFile(tokenPath)).toString();\r\n            log(\"okay. token loaded from disk\");\r\n        }\r\n        catch (ex) {\r\n            log(\"could not read the file\", ex.message);\r\n            log(\"generating a token...\");\r\n            token = crypto.randomBytes(64).toString(\"base64\");\r\n            log(\"writing the token to the file...\");\r\n            await fs.writeFile(tokenPath, token);\r\n            say(\"‚ú®  Written a new token to `\" + tokenPath + \"`. You might want to add \" + token_FILE_NAME + \" to your .gitignore file if it's not already there!\");\r\n        }\r\n    }\r\n    else {\r\n        log(\"using gitlab token from command line\", args.gitlab);\r\n        token = args.gitlab;\r\n    }\r\n    say(\" üîë  Use `\" + token + \"` as the Secret Token in your Gitlab webhook.\");\r\n    // Start the hapi server\r\n    log(\"starting hapi server...\");\r\n    const server = new Hapi.Server({ port });\r\n    server.route({\r\n        path: \"/\" + route,\r\n        method: \"POST\",\r\n        handler: async (req, h) => {\r\n            const log = logger(\"server\");\r\n            const reqToken = req.headers[\"x-gitlab-token\"];\r\n            log(\"got a request\");\r\n            if (reqToken === token) {\r\n                say(\" üëã  Gitlab just triggered our webhook.\");\r\n                shell.cd(directoryArg);\r\n                const result = shell.exec(\"git pull\");\r\n                if (result.code === 0) {\r\n                    say(\" üëå  Pulled the repo successfully.\");\r\n                }\r\n                else {\r\n                    say(\" üëé  Failed to pull the repo. Consult the logs for more information.\");\r\n                }\r\n                return \"Success.\";\r\n            }\r\n            else {\r\n                log(\"token is invalid, returning 401\");\r\n                throw boom.unauthorized();\r\n            }\r\n        },\r\n    });\r\n    await server.start();\r\n    log(\"hapi server up\");\r\n})().catch((ex) => {\r\n    if (ex instanceof ConfigError) {\r\n        say(\"‚ò†Ô∏è  Could not start Hook. \" + ex.message + \"\\nThis is probably a problem with the arguments you provided to Hook. Try doing `\" + process.argv[1] + \" --help`\");\r\n    }\r\n    else {\r\n        throw ex;\r\n    }\r\n    process.exit(1);\r\n});\r\n//# sourceMappingURL=index.js.map","references":["/Users/xenxier/Code/hook/node_modules/@types/debug/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/minimist/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/fs-extra/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/hapi/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/marked/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/marked-terminal/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/boom/index.d.ts","/Users/xenxier/Code/hook/node_modules/@types/shelljs/index.d.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"src/\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\"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\"}"}
